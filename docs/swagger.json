{
    "swagger": "2.0",
    "info": {
        "description": "Comprehensive backend API for Itsrama Portfolio",
        "title": "Itsrama Portfolio Backend API",
        "contact": {
            "name": "Muhamad Ramadhan",
            "url": "https://itsrama.kawasan.digital",
            "email": "muhamad.ramadhan.dev@gmail.com"
        },
        "version": "1.0.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/experiences": {
            "get": {
                "description": "Retrieve a paginated list of experiences with optional filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Experiences"
                ],
                "summary": "List experiences",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by company name",
                        "name": "company",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by featured status",
                        "name": "is_featured",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Experiences retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/experience.Experience"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new experience with logo and images",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Experiences"
                ],
                "summary": "Create a new experience",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Logo Image",
                        "name": "logo_image",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Experience Images",
                        "name": "images",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Experience Details in JSON format (See ExperienceCreate Model)",
                        "name": "payload",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Experience created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/experience.Experience"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/experience.ExperienceCreate"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            }
        },
        "/experiences/bulk": {
            "put": {
                "description": "Bulk update experiences with logo and images",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Experiences"
                ],
                "parameters": [
                    {
                        "type": "file",
                        "description": "Logo Image",
                        "name": "logo_image",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Experience Images",
                        "name": "images",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Experience Details in JSON array format (See ExperienceUpdate Model)",
                        "name": "payload",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Experiences updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/experience.Experience"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/experience.ExperienceUpdate"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create multiple experiences in a single request",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Experiences"
                ],
                "summary": "Bulk create experiences",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "collectionFormat": "csv",
                        "description": "Logo Image",
                        "name": "logo_image",
                        "in": "formData"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "collectionFormat": "csv",
                        "description": "Experience Images",
                        "name": "images",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Experience Details in JSON array format (See ExperienceCreate Model)",
                        "name": "payload",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Experiences created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/experience.Experience"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/experience.ExperienceCreate"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete multiple experiences in a single request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Experiences"
                ],
                "summary": "Bulk delete experiences",
                "parameters": [
                    {
                        "description": "Experience IDs to delete",
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Experiences deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            }
        },
        "/experiences/search": {
            "get": {
                "description": "Perform a full-text search on experiences with pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Experiences"
                ],
                "summary": "Search experiences",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Experiences search completed successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/experience.Experience"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            }
        },
        "/experiences/{id}": {
            "get": {
                "description": "Retrieve a specific experience using its unique identifier",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Experiences"
                ],
                "summary": "Get an experience by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Experience ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Experience retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/experience.Experience"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Experience not found",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing experience with new details and optional files",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Experiences"
                ],
                "summary": "Update an experience",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Experience ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Logo Image",
                        "name": "logo_image",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Experience Images",
                        "name": "images",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Experience Details in JSON format (See ExperienceUpdate Model)",
                        "name": "payload",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Experience updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/experience.Experience"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/experience.ExperienceUpdate"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Experience not found",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an experience by its unique identifier",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Experiences"
                ],
                "summary": "Delete an experience",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Experience ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Experience deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Experience not found",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Performs a health check on the service and its dependencies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Check Health Status",
                "responses": {
                    "200": {
                        "description": "Service is healthy",
                        "schema": {
                            "$ref": "#/definitions/health.HealthStatus"
                        }
                    },
                    "206": {
                        "description": "Service is degraded",
                        "schema": {
                            "$ref": "#/definitions/health.HealthStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/health.HealthStatus"
                        }
                    },
                    "503": {
                        "description": "Service is unavailable",
                        "schema": {
                            "$ref": "#/definitions/health.HealthStatus"
                        }
                    }
                }
            }
        },
        "/projects": {
            "get": {
                "description": "Retrieve a paginated list of projects with optional filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "List projects",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by project category",
                        "name": "category",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Projects retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/project.Project"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new project with details and optional images",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Create a new project",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "collectionFormat": "csv",
                        "description": "Project Images",
                        "name": "uploaded_images",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Project Details in JSON format (See ProjectCreate Model)",
                        "name": "payload",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/project.Project"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/project.ProjectCreate"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            }
        },
        "/projects/bulk": {
            "put": {
                "description": "Update multiple projects in a single request",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Bulk update projects",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "collectionFormat": "csv",
                        "description": "Project Images",
                        "name": "uploaded_images",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Project Update Details in JSON array format (See ProjectUpdate Model)",
                        "name": "payload",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Projects updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/project.Project"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/project.ProjectUpdate"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create multiple projects in a single request",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Bulk create projects",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "collectionFormat": "csv",
                        "description": "Project Images",
                        "name": "uploaded_images",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Project Details in JSON array format (See ProjectCreate Model)",
                        "name": "payload",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Projects created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/project.Project"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/project.ProjectCreate"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete multiple projects in a single request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Bulk delete projects",
                "parameters": [
                    {
                        "description": "Project IDs to delete",
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Projects deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            }
        },
        "/projects/search": {
            "get": {
                "description": "Perform a full-text search on projects with pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Search projects",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Projects search completed successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/project.Project"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            }
        },
        "/projects/{id}": {
            "get": {
                "description": "Retrieve a project using its unique identifier",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Get a project by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/project.Project"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing project with new details and optional images",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Update a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "collectionFormat": "csv",
                        "description": "Project Images",
                        "name": "uploaded_images",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Project Update Details in JSON format (See ProjectUpdate Model)",
                        "name": "payload",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/project.Project"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/project.ProjectUpdate"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a project by its unique identifier",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Delete a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            }
        },
        "/tech-stacks": {
            "get": {
                "description": "Retrieve a paginated list of tech stacks with optional filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tech Stacks"
                ],
                "summary": "List tech stacks",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by category",
                        "name": "category",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tech stacks retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/tech_stack.TechStack"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new tech stack with image upload",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tech Stacks"
                ],
                "summary": "Create a new tech stack",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Tech Stack Image",
                        "name": "image",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Tech Stack Details in JSON format (See TechStackCreate Model)",
                        "name": "payload",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tech stack created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/tech_stack.TechStack"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/tech_stack.TechStackCreate"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            }
        },
        "/tech-stacks/bulk": {
            "put": {
                "description": "Update multiple tech stacks in a single request",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tech Stacks"
                ],
                "summary": "Bulk update tech stacks",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "collectionFormat": "csv",
                        "description": "Tech Stack Images",
                        "name": "images",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Tech Stack Update Details in JSON array format (See TechStackUpdate Model)",
                        "name": "payload",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tech stacks updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/tech_stack.TechStack"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/tech_stack.TechStackUpdate"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create multiple tech stacks in a single request",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tech Stacks"
                ],
                "summary": "Bulk create tech stacks",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "collectionFormat": "csv",
                        "description": "Tech Stack Images",
                        "name": "image",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Tech Stack Details in JSON array format (See TechStackCreate Model)",
                        "name": "payload",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tech stacks created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/tech_stack.TechStack"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/tech_stack.TechStackCreate"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete multiple tech stacks in a single request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tech Stacks"
                ],
                "summary": "Bulk delete tech stacks",
                "parameters": [
                    {
                        "description": "Tech Stack IDs to delete",
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tech stacks deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            }
        },
        "/tech-stacks/{id}": {
            "get": {
                "description": "Retrieve a specific tech stack using its unique identifier",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tech Stacks"
                ],
                "summary": "Get a tech stack by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tech Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tech stack retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/tech_stack.TechStack"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Tech stack not found",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing tech stack with new details and optional image",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tech Stacks"
                ],
                "summary": "Update a tech stack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tech Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Tech Stack Image",
                        "name": "image",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Tech Stack Update Details in JSON format (See TechStackUpdate Model)",
                        "name": "payload",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tech stack updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/tech_stack.TechStack"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/tech_stack.TechStackUpdate"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Tech stack not found",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a tech stack by its unique identifier",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tech Stacks"
                ],
                "summary": "Delete a tech stack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tech Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tech stack deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Tech stack not found",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "experience.Experience": {
            "description": "Detailed information about a professional work experience",
            "type": "object",
            "required": [
                "company",
                "role",
                "start_date"
            ],
            "properties": {
                "arrangement": {
                    "type": "string",
                    "example": "Remote"
                },
                "company": {
                    "type": "string",
                    "example": "Tech Innovations Inc."
                },
                "created_at": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string",
                    "example": "2023-06-30"
                },
                "id": {
                    "description": "Identification\n@Description Unique identifier for the experience",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "images_url": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "https://example.com/project1.png"
                    ]
                },
                "impact": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Increased system performance by 40%"
                    ]
                },
                "is_featured": {
                    "description": "Metadata\n@Description Additional metadata for the experience",
                    "type": "boolean",
                    "example": true
                },
                "job_type": {
                    "type": "string",
                    "example": "Full-time"
                },
                "location": {
                    "type": "string",
                    "example": "San Francisco, CA"
                },
                "logo_url": {
                    "type": "string",
                    "example": "https://example.com/company-logo.png"
                },
                "role": {
                    "description": "Job Details\n@Description Job role and company information",
                    "type": "string",
                    "example": "Senior Software Engineer"
                },
                "start_date": {
                    "description": "Timing and Location\n@Description Job timing and location details",
                    "type": "string",
                    "example": "2020-01-15"
                },
                "updated_at": {
                    "type": "string"
                },
                "work_description": {
                    "description": "Job Description\n@Description Detailed description of work and achievements",
                    "type": "string",
                    "example": "Led development of scalable web applications"
                }
            }
        },
        "experience.ExperienceCreate": {
            "description": "Input model for creating a new experience",
            "type": "object",
            "properties": {
                "arrangement": {
                    "description": "@Description Work arrangement\n@Enums [\"Remote\", \"Hybrid\", \"On-site\"]",
                    "type": "string",
                    "example": "Remote"
                },
                "company": {
                    "description": "@Description Company name\n@Format string",
                    "type": "string",
                    "example": "Tech Innovations Inc."
                },
                "end_date": {
                    "description": "@Description End date of the job (optional)\n@Format date",
                    "type": "string",
                    "example": "2023-06-30"
                },
                "impact": {
                    "description": "@Description Key impacts or achievements",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Increased system performance by 40%"
                    ]
                },
                "is_featured": {
                    "description": "@Description Flag to mark as featured experience",
                    "type": "boolean",
                    "example": true
                },
                "job_type": {
                    "description": "@Description Job type\n@Enums [\"Full-time\", \"Part-time\", \"Contract\", \"Freelance\"]",
                    "type": "string",
                    "example": "Full-time"
                },
                "location": {
                    "description": "@Description Job location\n@Format string",
                    "type": "string",
                    "example": "San Francisco, CA"
                },
                "role": {
                    "description": "@Description Job role\n@Format string",
                    "type": "string",
                    "example": "Senior Software Engineer"
                },
                "start_date": {
                    "description": "@Description Start date of the job\n@Format date",
                    "type": "string",
                    "example": "2020-01-15"
                },
                "tech_stack_ids": {
                    "description": "@Description IDs of associated tech stacks\n@Enums [\"550e8400-e29b-41d4-a716-446655440000\", \"650f9500-f39c-52d5-b827-557766550001\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "work_description": {
                    "description": "@Description Work description\n@Format string",
                    "type": "string",
                    "example": "Led development of scalable web applications"
                }
            }
        },
        "experience.ExperienceUpdate": {
            "description": "Input model for updating an existing experience",
            "type": "object",
            "properties": {
                "arrangement": {
                    "description": "@Description Work arrangement\n@Enums [\"Remote\", \"Hybrid\", \"On-site\"]",
                    "type": "string",
                    "example": "Remote"
                },
                "company": {
                    "description": "@Description Company name\n@Format string",
                    "type": "string",
                    "example": "Tech Innovations Inc."
                },
                "end_date": {
                    "description": "@Description End date of the job (optional)\n@Format date",
                    "type": "string",
                    "example": "2023-06-30"
                },
                "id": {
                    "description": "@Description Unique identifier of the experience to update",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "impact": {
                    "description": "@Description Key impacts or achievements",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Increased system performance by 40%"
                    ]
                },
                "is_featured": {
                    "description": "@Description Flag to mark as featured experience",
                    "type": "boolean",
                    "example": true
                },
                "job_type": {
                    "description": "@Description Job type\n@Enums [\"Full-time\", \"Part-time\", \"Contract\", \"Freelance\"]",
                    "type": "string",
                    "example": "Full-time"
                },
                "location": {
                    "description": "@Description Job location\n@Format string",
                    "type": "string",
                    "example": "San Francisco, CA"
                },
                "role": {
                    "description": "@Description Job role\n@Format string",
                    "type": "string",
                    "example": "Senior Software Engineer"
                },
                "start_date": {
                    "description": "@Description Start date of the job\n@Format date",
                    "type": "string",
                    "example": "2020-01-15"
                },
                "tech_stack_ids": {
                    "description": "@Description IDs of associated tech stacks\n@Enums [\"550e8400-e29b-41d4-a716-446655440000\", \"650f9500-f39c-52d5-b827-557766550001\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "work_description": {
                    "description": "@Description Work description\n@Format string",
                    "type": "string",
                    "example": "Led development of scalable web applications"
                }
            }
        },
        "health.CPUHealth": {
            "type": "object",
            "properties": {
                "cores": {
                    "type": "integer"
                },
                "loadAverage": {
                    "type": "number"
                }
            }
        },
        "health.DatabaseHealth": {
            "type": "object",
            "properties": {
                "connected": {
                    "type": "boolean"
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "health.HealthStatus": {
            "type": "object",
            "properties": {
                "cpu": {
                    "$ref": "#/definitions/health.CPUHealth"
                },
                "database": {
                    "$ref": "#/definitions/health.DatabaseHealth"
                },
                "memory": {
                    "$ref": "#/definitions/health.MemoryHealth"
                },
                "status": {
                    "type": "string"
                },
                "system": {
                    "$ref": "#/definitions/health.SystemInfo"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "health.MemoryHealth": {
            "type": "object",
            "properties": {
                "free": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "used": {
                    "type": "integer"
                },
                "usedPercent": {
                    "type": "number"
                }
            }
        },
        "health.SystemInfo": {
            "type": "object",
            "properties": {
                "goVersion": {
                    "type": "string"
                },
                "numCPU": {
                    "type": "integer"
                },
                "numGoroutine": {
                    "type": "integer"
                }
            }
        },
        "project.DevelopmentStatus": {
            "description": "Development status of a project",
            "type": "string",
            "enum": [
                "Alpha",
                "Beta",
                "MVP"
            ],
            "x-enum-varnames": [
                "Alpha",
                "Beta",
                "MVP"
            ]
        },
        "project.ProgressStatus": {
            "description": "Current progress status of a project",
            "type": "string",
            "enum": [
                "In Progress",
                "In Revision",
                "On Hold",
                "Completed"
            ],
            "x-enum-varnames": [
                "InProgress",
                "InRevision",
                "OnHold",
                "Completed"
            ]
        },
        "project.Project": {
            "description": "Detailed information about a project",
            "type": "object",
            "required": [
                "description",
                "slug",
                "title"
            ],
            "properties": {
                "category": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/project.ProjectCategory"
                        }
                    ],
                    "example": "Web Development"
                },
                "created_at": {
                    "description": "Metadata",
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "example": "A responsive website to display my professional projects and skills"
                },
                "development_status": {
                    "description": "Status",
                    "allOf": [
                        {
                            "$ref": "#/definitions/project.DevelopmentStatus"
                        }
                    ],
                    "example": "Beta"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Responsive Design",
                        "Dark Mode"
                    ]
                },
                "github_url": {
                    "description": "URLs",
                    "type": "string",
                    "example": "https://github.com/username/project"
                },
                "id": {
                    "description": "Identification",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "images": {
                    "description": "Project Content",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/project.ProjectImage"
                    }
                },
                "is_featured": {
                    "type": "boolean",
                    "example": true
                },
                "my_role": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Full-stack Developer",
                        "UI/UX Designer"
                    ]
                },
                "progress_percentage": {
                    "type": "integer",
                    "example": 75
                },
                "progress_status": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/project.ProgressStatus"
                        }
                    ],
                    "example": "In Progress"
                },
                "slug": {
                    "type": "string",
                    "example": "portfolio-website"
                },
                "subtitle": {
                    "type": "string",
                    "example": "Personal portfolio showcasing projects"
                },
                "title": {
                    "description": "Project Details",
                    "type": "string",
                    "example": "Portfolio Website"
                },
                "updated_at": {
                    "type": "string"
                },
                "web_url": {
                    "type": "string",
                    "example": "https://myportfolio.com"
                }
            }
        },
        "project.ProjectCategory": {
            "description": "Category of the project",
            "type": "string",
            "enum": [
                "Web Development",
                "API Development",
                "Bot Development",
                "Mobile App",
                "Desktop App",
                "UI/UX Design",
                "Other"
            ],
            "x-enum-varnames": [
                "WebDevelopment",
                "ApiDevelopment",
                "BotDevelopment",
                "MobileApp",
                "DesktopApp",
                "UIUX",
                "Other"
            ]
        },
        "project.ProjectCreate": {
            "description": "Input model for creating a new project",
            "type": "object",
            "required": [
                "description",
                "slug",
                "tech_stack_ids",
                "title"
            ],
            "properties": {
                "category": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/project.ProjectCategory"
                        }
                    ],
                    "example": "Web Development"
                },
                "description": {
                    "type": "string",
                    "example": "A responsive website to display my professional projects and skills"
                },
                "development_status": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/project.DevelopmentStatus"
                        }
                    ],
                    "example": "Beta"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Responsive Design",
                        "Dark Mode"
                    ]
                },
                "github_url": {
                    "type": "string",
                    "example": "https://github.com/username/project"
                },
                "is_featured": {
                    "type": "boolean",
                    "example": true
                },
                "my_role": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Full-stack Developer",
                        "UI/UX Designer"
                    ]
                },
                "progress_percentage": {
                    "type": "integer",
                    "example": 75
                },
                "progress_status": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/project.ProgressStatus"
                        }
                    ],
                    "example": "In Progress"
                },
                "slug": {
                    "type": "string",
                    "example": "portfolio-website"
                },
                "subtitle": {
                    "type": "string",
                    "example": "Personal portfolio showcasing projects"
                },
                "tech_stack_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"550e8400-e29b-41d4-a716-446655440000\"]"
                    ]
                },
                "title": {
                    "type": "string",
                    "example": "Portfolio Website"
                },
                "web_url": {
                    "type": "string",
                    "example": "https://myportfolio.com"
                }
            }
        },
        "project.ProjectImage": {
            "description": "Image details for a project",
            "type": "object",
            "properties": {
                "alt": {
                    "type": "string",
                    "example": "Project screenshot"
                },
                "is_thumbnail": {
                    "type": "boolean",
                    "example": false
                },
                "src": {
                    "type": "string",
                    "example": "https://example.com/image.jpg"
                }
            }
        },
        "project.ProjectUpdate": {
            "description": "Input model for updating an existing project",
            "type": "object",
            "required": [
                "id",
                "slug",
                "tech_stack_ids"
            ],
            "properties": {
                "category": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/project.ProjectCategory"
                        }
                    ],
                    "example": "Web Development"
                },
                "description": {
                    "type": "string",
                    "example": "An improved responsive website to display my professional projects and skills"
                },
                "development_status": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/project.DevelopmentStatus"
                        }
                    ],
                    "example": "Beta"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Responsive Design",
                        "Dark Mode",
                        "Performance Optimization"
                    ]
                },
                "github_url": {
                    "type": "string",
                    "example": "https://github.com/username/updated-project"
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "is_featured": {
                    "type": "boolean",
                    "example": true
                },
                "my_role": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Full-stack Developer",
                        "DevOps Engineer"
                    ]
                },
                "progress_percentage": {
                    "type": "integer",
                    "example": 100
                },
                "progress_status": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/project.ProgressStatus"
                        }
                    ],
                    "example": "Completed"
                },
                "slug": {
                    "type": "string",
                    "example": "portfolio-website"
                },
                "subtitle": {
                    "type": "string",
                    "example": "Updated personal portfolio showcasing projects"
                },
                "tech_stack_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"550e8400-e29b-41d4-a716-446655440000\"]"
                    ]
                },
                "title": {
                    "type": "string",
                    "example": "Updated Portfolio Website"
                },
                "web_url": {
                    "type": "string",
                    "example": "https://updated-myportfolio.com"
                }
            }
        },
        "response.APIResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Actual response data"
                },
                "error": {
                    "description": "Detailed error information (only populated for error responses)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.ErrorDetails"
                        }
                    ]
                },
                "message": {
                    "description": "Human-readable message",
                    "type": "string"
                },
                "metadata": {
                    "description": "Additional metadata",
                    "type": "object",
                    "additionalProperties": true
                },
                "pagination": {
                    "description": "Pagination information (optional)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.Pagination"
                        }
                    ]
                },
                "request_id": {
                    "description": "Unique request identifier for tracing",
                    "type": "string"
                },
                "success": {
                    "description": "Status of the response (success/error)",
                    "type": "boolean"
                },
                "timestamp": {
                    "description": "Timestamp of the response",
                    "type": "string"
                }
            }
        },
        "response.ErrorDetails": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Machine-readable error code",
                    "type": "string"
                },
                "details": {
                    "description": "Detailed error description",
                    "type": "string"
                },
                "recoverable": {
                    "description": "Indicates if the error is potentially recoverable",
                    "type": "boolean"
                },
                "trace": {
                    "description": "Trace information for debugging",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.Pagination": {
            "type": "object",
            "properties": {
                "has_next_page": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "tech_stack.TechStack": {
            "description": "Technology stack information with details about skills and technologies",
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "category": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/tech_stack.TechStackCategory"
                        }
                    ],
                    "example": "Backend"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "image_url": {
                    "type": "string",
                    "example": "https://example.com/go-logo.png"
                },
                "is_core_skill": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Go"
                },
                "role": {
                    "type": "string",
                    "example": "Backend Development"
                },
                "updated_at": {
                    "type": "string"
                },
                "version": {
                    "type": "string",
                    "example": "1.20"
                }
            }
        },
        "tech_stack.TechStackCategory": {
            "type": "string",
            "enum": [
                "Backend",
                "Frontend",
                "Frameworks",
                "Version Control",
                "Database",
                "DevOps",
                "Tools",
                "CMS \u0026 Platforms"
            ],
            "x-enum-varnames": [
                "CategoryBackend",
                "CategoryFrontend",
                "CategoryFrameworks",
                "CategoryVersionControl",
                "CategoryDatabase",
                "CategoryDevOps",
                "CategoryTools",
                "CategoryCMSPlatforms"
            ]
        },
        "tech_stack.TechStackCreate": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "category": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/tech_stack.TechStackCategory"
                        }
                    ],
                    "example": "Backend"
                },
                "is_core_skill": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Python"
                },
                "role": {
                    "type": "string",
                    "example": "Data Science"
                },
                "version": {
                    "type": "string",
                    "example": "3.9"
                }
            }
        },
        "tech_stack.TechStackUpdate": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "category": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/tech_stack.TechStackCategory"
                        }
                    ],
                    "example": "Backend"
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "is_core_skill": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Rust"
                },
                "role": {
                    "type": "string",
                    "example": "Systems Programming"
                },
                "version": {
                    "type": "string",
                    "example": "1.65"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "security": [
        {
            "BearerAuth": []
        }
    ]
}